// Одиночка (Singleton) — це патерн програмування, який забезпечує,
// що клас має тільки один екземпляр і надає глобальну точку доступу до цього екземпляра.

// Клас OrderTracker відповідає за відстеження замовлень
class OrderTracker {
  // Приватне статичне instance поле для збереження єдиного екземпляра класу початкове значення null
  static #instance = null;
  // Приватне статичне orders поле для збереження списку замовлень початкове значення []
  static #orders = [];
  /**
   * Статичний метод create використовується для створення єдиного екземпляра класу
   */
  static create() {
    // Перевіряємо, чи є вже створений екземпляр класу
    if (!this.#instance) {
      // Якщо немає, створюємо новий екземпляр
      this.#instance = new OrderTracker();
    } else {
      // Інакше повертаємо єдиний екземпляр класу

      return this.#instance;
    }
  }

  // функція добавлення елемента в масив (в клас)
  static add(item) {
    this.#orders.push(item);
  }

  // функція виводу елемента в масив (в клас)
  static get() {
    return this.#orders;
  }
  /**
   * Статичний метод add використовується для додавання замовлення до списку
   * Отримує item та додає його до масиву замовлень
   */
  /**
   * Статичний метод get використовується для отримання списку замовлень
   */
}
console.log("Завдання 1 ====================================");
// Після виконання розкоментуйте код нижче

// Створюємо єдиний екземпляр класу OrderTracker
const tracker = OrderTracker.create();

// Додаємо замовлення до списку
OrderTracker.add("Телефон Samsung");
OrderTracker.add("Ноутбук Apple Air");

// Отримуємо список замовлень
const orders = OrderTracker.get();

// Виводимо список замовлень в консоль
console.log(orders);
